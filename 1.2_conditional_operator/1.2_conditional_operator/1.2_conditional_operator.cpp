#include <iostream>
using namespace std;

int main() {
	int a1, b1, c1, a2, b2, c2;
	cin >> a1 >> b1 >> c1 >> a2 >> b2 >> c2;

	return 0;
}


/*
1. Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. Даны две различные клетки шахматной доски, 
	определите, может ли король попасть с первой клетки на вторую одним ходом.
  Формат входных данных
	Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
  Формат выходных данных
	Программа должна вывести YES, если из первой клетки ходом короля можно попасть во вторую или NO в противном случае.
	a.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	int x = (x1 - x2) * (x1 - x2); // ищем отклонение на 1 клетку по модулю
	int y = (y1 - y2) * (y1 - y2); // возводением в степень(т.к. abs пока не доступно)
	if ((x == 0 && y == 0) || x > 1 || y > 1) { // просто запилил проверку на ноль
		cout << "no";
	}
	else {
		cout << "yes";
	}
	b.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	cout << ((abs(x1 - x2) > 1 || abs(y1 - y2) > 1) ? "no" : "yes";

2. Шахматный слон ходит по диагонали. Даны две различные клетки шахматной доски, определите, может ли слон попасть с первой клетки на вторую одним ходом.
  Формат входных данных
	Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
  Формат выходных данных
	Программа должна вывести YES, если из первой клетки ходом слона можно попасть во вторую или NO в противном случае.
	a.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	int x = (x1 - x2) * (x1 - x2); 
	int y = (y1 - y2) * (y1 - y2); 
	if (x == y) {
		cout << "yes";
	}
	else {
		cout << "no";
	}
	b.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	if (x1 - y1 == x2 - y2 || x1 + y1 == x2 + y2) { // "матричный" фокус
		cout << "yes";
	}
	else {
		cout << "no";
	}
3. Шахматный ферзь ходит по диагонали, горизонтали или вертикали. Даны две различные клетки шахматной доски, определите, может ли ферзь попасть с первой клетки на вторую одним ходом.
  Формат входных данных
	Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
  Формат выходных данных
	Программа должна вывести YES, если из первой клетки ходом ферзя можно попасть во вторую или NO в противном случае.
	a.
	cin >> x1 >> y1 >> x2 >> y2;
	int x = (x1 - x2) * (x1 - x2); // ищем отклонение на 1 клетку по модулю
	int y = (y1 - y2) * (y1 - y2); // возводением в степень(т.к. abs пока не доступно)
	if (x == y || x != 0 && y == 0 || x == 0 && y != 0) {
		cout << "yes";
	}
	else {
		cout << "no";
	}
	b.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	if (x1 - y1 == x2 - y2 || x1 + y1 == x2 + y2 || x1 == x2 || y1 == y2) {
		cout << "yes";
	}
	else {
		cout << "no";
	}
5. Шахматный конь ходит буквой “Г” — на две клетки по вертикали в любом направлении и на одну клетку по горизонтали, или наоборот.
	Даны две различные клетки шахматной доски, определите, может ли конь попасть с первой клетки на вторую одним ходом.
  Формат входных данных
	Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
  Формат выходных данных
	Программа должна вывести YES, если из первой клетки ходом коня можно попасть во вторую или NO в противном случае.
	a.
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	int x = (x1 - x2) * (x1 - x2);
	int y = (y1 - y2) * (y1 - y2);
	if (x==4 && y==1 || x==1 && y ==4) {
		cout << "yes";
	}
	else {
		cout << "no";
	}
	b. 	
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	int xy = abs((x1 - x2) * (y1 - y2));
	cout << ((xy==2) ? "yes" : "no");
6. Шоколадка имеет вид прямоугольника, разделенного на N×M долек. Шоколадку можно один раз разломить по прямой на две части.
	Определите, можно ли таким образом отломить от шоколадки ровно K долек.
	int n, m, k;
	cin >> n >> m >> k;
	if (n * m > k and (k % n == 0 or k % m == 0)) {
		cout << "yes";
	}
	else {
		cout << "no";
	}
7. Яша плавал в бассейне размером N×M метров и устал. В этот момент он обнаружил, что находится на расстоянии X метров
	от одного из длинных бортиков (не обязательно от ближайшего) и Y метров от одного из коротких бортиков. 
	Какое минимальное расстояние должен проплыть Яша, чтобы выбраться из бассейна на бортик?
	int n, m, x, y;
	cin >> n >> m >> x >> y;
	int a = ((n / 2) > x ? x : n - x);
	int b = ((m / 2) > y ? y : m - y);
	cout << ((a < b) ? a : b);
6. Дано три числа. Упорядочите их в порядке неубывания.
	a.
	int a, b, c, x, y, z;
	cin >> a >> b >> c;
	if (a >= b && b >= c) x = a;
	else if (b >= c) x = b;
	else x = c;
	if (a <= b and b <= c) z = a;
	else if (b <= c) z = b;
	else z = c;
	y = a + b + c - x - z;
	cout << z << " " << y << " " << x;
	b.
	int a, b, c;
	cin >> a >> b >> c;
	int min = a;
	int max = a;
	if (b <= min) min = b;
	if (c <= min) min = c;
	if (b >= max) max = b;
	if (c >= max) max = c;
	int mean = a + b + c - min - max;
	cout << min << " " << mean << " " << max;
5. Есть две коробки, первая размером A1×B1×C1, вторая размером A2×B2×C2. Определите, можно ли разместить одну
	из этих коробок внутри другой, при условии, что поворачивать коробки можно только на 90 градусов вокруг ребер.
  Формат входных данных
	Программа получает на вход числа A1, B1, C1, A2, B2, C2.
  Формат выходных данных
	Программа должна вывести одну из следующих строчек:
	Boxes are equal, если коробки одинаковые,
	The first box is smaller than the second one, если первая коробка может быть положена во вторую,
	The first box is larger than the second one, если вторая коробка может быть положена в первую,
	Boxes are incomparable, во всех остальных случаях.

	Решение через двойную процедуру 4 задания - "укладываем" коробки по сторонам и стравниваем между собой.
*/