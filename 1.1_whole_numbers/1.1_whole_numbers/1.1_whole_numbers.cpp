#include <iostream> 
using namespace std;

int main() {
	int h, a, b;
	cin >> h >> a >> b;
	cout << ((h - a) + (a - b) - 1) / (a - b) + 1;
	return 0;
}


/*
#include <iostream> // подключаем библиотеку ввода-вывода

using namespace std; // используем стандартные функции

int main() {		// int - основная функция, main() - название с
	cout << "Hello, World"; // Console OUTput
	return 0;
}
1. Электронные часы
	Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59), то есть сначала записывается количество часов, 
	потом обязательно двузначное количество минут, затем обязательно двузначное количество секунд.
	Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
	С начала суток прошло N секунд. Выведите, что покажут часы.
  Формат входных данных
	На вход дается натурально число N, не превосходящее 10^7(10000000).
  Формат выходных данных
	Выведите ответ на задачу.

	a.
	int n;
	cin >> n;
	cout << n % 86400 / 3600 << " : " << n % 3600 / 600 << n % 600 / 60 << " : " << n % 60 / 10 << n % 10;
	b.
	int n, h, m1, m2, s1, s2;
	cin >> n;
	n = n % 86400; // Округляем до суток
	h = n / 3600; // Часы
	m1 = n / 60 % 60 / 10; // до десяых минут
	m2 = n / 60 % 60 % 10; // до минуты
	s1 = n % 60 / 10; // ДО десятых секунд
	s2 = n % 60 % 10; // До секунды
	cout << h << ":" << m1 << m2 << ":" << s1 << s2;

2. Разность времен
	Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени. 
	Известно, что второй момент времени наступил не раньше первого. Определите, сколько секунд прошло между двумя моментами времени.
  Формат входных данных
	Программа на вход получает три целых числа: часы, минуты, секунды, задающие первый момент времени и три целых числа, задающих второй момент времени.
  Формат выходных данных
	Выведите число секунд между этими моментами времени.

	a.	cout << (h2 - h1) * 3600 + (m2 - m1) * 60 + (s2 - s1); // может ввести в заблуждение при первом просмотре из-за рассчёта секунд
	b.  cout << (h2 * 3600 + m2 * 60 + s2) - (h1 * 3600 + m1 * 60 + s1); // примитивный и предсказуемый

3. МКАД
	Длина Московской кольцевой автомобильной дороги —109 километров. Байкер Вася стартует с нулевого километра МКАД
	и едет со скоростью V километров в час. На какой отметке он остановится через T часов?
  Формат входных данных
	Программа получает на вход целые числа V и T. Если V > 0, то Вася движется в положительном направлении по МКАД, 
	если же значение V < 0, то в отрицательном. 0 ≤ T ≤ 1000, -1000 ≤ V ≤ 1000
  Формат выходных данных
	Программа должна вывести целое число от 0 до 108 — номер отметки, на которой остановится Вася.

	int v, t, mkad = 109;
	cin >> v >> t;
	cout << (v * t % mkad + mkad) % mkad; 

4. Симметричное число
	Дано четырехзначное число. Определите, является ли его десятичная запись симметричной. Если число симметричное, то выведите 1, 
	иначе выведите любое другое целое число. Число может иметь меньше четырех знаков, тогда нужно считать,
	что его десятичная запись дополняется слева незначащими нулями.
  Формат входных данных
	Вводится единственное число.
  Формат выходных данных
	Выведите одно целое число - ответ на задачу.

	int n, n1, n2, n3, n4, n12, n34, com;
	cin >> n;
	n1 = n / 1000;
	n2 = n % 1000 / 100;
	n3 = n % 100 / 10;
	n4 = n % 10;
	n12 = n1 * 10 + n2;
	n34 = n3 + n4 * 10;
	com = n12 - n34 + 1;
	cout << com;

5. Улитка
	Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров. На какой день улитка доползет до вершины шеста?
  Формат входных данных
	Программа получает на вход целые неотрицательные числа H, A, B, причем H > B. Числа не превосходят 100.
  Формат выходных данных
	Программа должна вывести одно натуральное число. Гарантируется, что A > B.

	int h, a, b;
	cin >> h >> a >> b;
	cout << ((h - a) + (a - b) - 1) / (a - b) + 1;




*/